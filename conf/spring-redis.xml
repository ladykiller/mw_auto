<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"
          p:maxTotal="${redis.maxTotal}"
          p:minIdle="${redis.minIdle}"
          p:maxIdle="${redis.maxIdle}"
          p:maxWaitMillis="${redis.maxWaitMillis}"
          p:testOnBorrow="${redis.testOnBorrow}"
          p:testOnReturn="${redis.testOnReturn}"/>

    <bean id="redisSentinelConfig" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <constructor-arg index="0">
            <bean class="org.springframework.core.env.MapPropertySource">
                <constructor-arg index="0" value="redisSentinelPropertySource"/>
                <constructor-arg index="1">
                    <map>
                        <entry key="spring.redis.sentinel.master" value="${redis.sentinel.master}"/>
                        <entry key="spring.redis.sentinel.nodes" value="${redis.sentinel.nodes}"/>
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true"
          p:poolConfig-ref="jedisPoolConfig"
          p:timeout="15000"
          p:password="${redis.password}"
          p:database="${redis.database}">
        <constructor-arg ref="redisSentinelConfig"/>
    </bean>

    <bean id="jdkSerializationRedisSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>

    <bean id="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.TimeoutRetryPolicy">
                <property name="timeout" value="${redis.timeoutRetry}"/>
                <!--50毫秒后重试-->
            </bean>
        </property>
    </bean>

    <bean id="simpleRedisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnFactory"
          p:defaultSerializer-ref="jdkSerializationRedisSerializer"/>

    <bean id="redisClient" class="cn.mwee.auto.auth.util.RedisClient">
        <property name="redisTemplate" ref="simpleRedisTemplate"/>
        <property name="retryTemplate" ref="retryTemplate"/>
    </bean>
</beans>